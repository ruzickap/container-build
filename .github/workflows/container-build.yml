name: container-build

on:
  workflow_dispatch:
    inputs:
      container_registry_push:
        description: "Push the image to Container Registry"
        type: boolean
        required: false
        default: false
      container_image_skip_vulnerability_checks:
        description: "Skip image (vulnerability) scanner"
        type: boolean
        required: false
        default: false
      container_image_expires_after:
        description: "Expires after (days) [or 'Never']"
        type: string
        required: false
        default: "Never"
      push_to_ghcr:
        description: "Push also to ghcr.io (GitHub)"
        type: boolean
        required: false
        default: true

  push:
    tags:
      # For code tagging use 'v' prefix, but 'v' prefix should not be part of container tag
      - "v[0-9]+.[0-9]+.[0-9]+*"
  schedule:
    - cron: "0 0 * * 1"

jobs:
  container-build-pipeline:
    name: "ðŸ’¡ ${{ matrix.container_image_dockerfile_location }}"
    strategy:
      fail-fast: false
      matrix:
        include:
          # Contains several vulnerabilities
          - container_image_dockerfile_location: src/app/Dockerfile
            # This is the "default Dockerfile", which will create tags without any suffix (like 'latest')
            container_image_tag_suffix: ""

          - container_image_dockerfile_location: src/app/Dockerfile-node-18-alpine
            container_image_tag_suffix: "-alpine"

          # "only" Grype finds some critical vulnerabilities
          - container_image_dockerfile_location: src/app/Dockerfile-node-18-debian-slim
            container_image_tag_suffix: "-debian-slim"

          - container_image_dockerfile_location: src/app/Dockerfile-nodejs-16-ubi
            container_image_tag_suffix: "-ubi"

          - container_image_dockerfile_location: src/app/Dockerfile-nodejs18-distroless
            container_image_tag_suffix: "-distroless"

    uses: ./.github/workflows/container-build-reusable-workflow.yml
    with:
      container_image_dockerfile_location: ${{ matrix.container_image_dockerfile_location }}
      container_image_tag_suffix: ${{ matrix.container_image_tag_suffix }}
      # The following variables can not be easily taken to `env` variables, because it is not supported :-(
      container_image_destination: quay.io/petr_ruzicka/myc-hello-kubernetes
      container_image_product_id: 12345
      container_image_vendor: MyCompany
      container_image_authors: petr.ruzicka@gmail.com
      container_image_authors_name: Petr Ruzicka
      container_image_logo_url: https://raw.githubusercontent.com/cncf/artwork/40e2e8948509b40e4bad479446aaec18d6273bf2/projects/kubernetes/icon/color/kubernetes-icon-color.svg
      container_image_repository_url: https://quay.io/repository/petr_ruzicka/myc-hello-kubernetes?tab=tags
      container_image_expires_after: ${{ inputs.container_image_expires_after || 'Never' }} # days
      # https://github.com/actions/runner/issues/1483
      container_registry_push: ${{ inputs.container_registry_push == true && true || false }}
      container_image_skip_vulnerability_checks: ${{ inputs.container_image_skip_vulnerability_checks == true && true || false }}
      push_to_ghcr: ${{ inputs.push_to_ghcr }}
    secrets:
      container_registry_user: ${{ secrets.CONTAINER_REGISTRY_USER }}
      container_registry_password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      # Prisma Cloud credentials (optional)
      pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
      pcc_pass: ${{ secrets.PCC_PASS }}
      pcc_user: ${{ secrets.PCC_USER }}
      # Snyk credentials (optional)
      snyk_token: ${{ secrets.SNYK_TOKEN }}
      # Wiz credentials (optional)
      wiz_client_id: ${{ secrets.WIZ_CLIENT_ID }}
      wiz_client_secret: ${{ secrets.WIZ_CLIENT_SECRET }}

  create-release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euxo pipefail
          gh release create ${{ github.ref_name }} --generate-notes
